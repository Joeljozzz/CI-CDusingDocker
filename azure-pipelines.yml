# CI/CD Pipeline for Docker Deployment to Azure

This repository showcases a CI/CD pipeline built with Azure DevOps that automates the process of building a Docker image, pushing it to Azure Container Registry (ACR), and deploying it to Azure App Service. 

## Overview

The CI/CD pipeline is designed to facilitate continuous integration and continuous deployment (CI/CD) for applications packaged in Docker containers. It consists of two primary stages: **Build** and **Deploy**.

### Key Components

- **Docker**: A platform used to develop, ship, and run applications inside containers. Containers are lightweight, portable, and ensure consistency across environments.
  
- **Azure Container Registry (ACR)**: A managed Docker container registry that allows you to store and manage your private Docker container images.

- **Azure App Service**: A fully managed platform for building, deploying, and scaling web apps. It supports a variety of programming languages and frameworks.

- **Azure Pipelines**: A cloud service that automates the building, testing, and deployment of applications. It integrates with GitHub, enabling you to trigger pipelines based on code changes.

## Pipeline Configuration

The pipeline is defined in the `azure-pipelines.yml` file, which contains several key components:

### Trigger

The pipeline is set to trigger on pushes to the `main` branch:

```yaml
trigger:
- main
